plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = "17"
targetCompatibility = "17"

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
version = "${project.mod_version}"
group = project.maven_group

//minecraft {
//    refmapName = "mixins.sodium.refmap.json"
//    accessWidener = file("src/main/resources/sodium.accesswidener")
//}

loom {
    accessWidenerPath = file("src/main/resources/sodium.accesswidener")
}

configurations {
    modIncludeImplementation

    include.extendsFrom modIncludeImplementation
    modImplementation.extendsFrom modIncludeImplementation
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modIncludeImplementation(fabricApi.module("fabric-api-base", project.fabric_version))
    modIncludeImplementation(fabricApi.module("fabric-rendering-fluids-v1", project.fabric_version))
    modIncludeImplementation(fabricApi.module("fabric-rendering-data-attachment-v1", project.fabric_version))
    modIncludeImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
    modIncludeImplementation(fabricApi.module("fabric-textures-v0", project.fabric_version))
}

if (project.use_third_party_mods) {
    repositories {
        maven { url = "https://maven.gegy.dev" }
    }

    dependencies {
        // DataBreaker applies a number of patches to eliminate the loading of data fixers
        // This greatly reduces the amount of time needed to start the game, but is generally unsafe in production
        modRuntime ("supercoder79:databreaker:${project.databreaker_version}") {
            transitive = false
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE.txt"
}
